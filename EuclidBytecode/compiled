Classfile /home/kano_vas/java/ifmo/translation/EuclidBytecode/src/main/java/Euclid.class
  Last modified 11.06.2016; size 823 bytes
  MD5 checksum d71f7c9448f794b1af55a38f71e0c368
  Compiled from "Euclid.java"
public class Euclid
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #14.#28        // java/lang/Object."<init>":()V
   #2 = Class              #29            // java/util/Scanner
   #3 = Fieldref           #30.#31        // java/lang/System.in:Ljava/io/InputStream;
   #4 = Methodref          #2.#32         // java/util/Scanner."<init>":(Ljava/io/InputStream;)V
   #5 = Fieldref           #13.#33        // Euclid.in:Ljava/util/Scanner;
   #6 = Class              #34            // java/io/PrintWriter
   #7 = Fieldref           #30.#35        // java/lang/System.out:Ljava/io/PrintStream;
   #8 = Methodref          #6.#36         // java/io/PrintWriter."<init>":(Ljava/io/OutputStream;)V
   #9 = Fieldref           #13.#37        // Euclid.out:Ljava/io/PrintWriter;
  #10 = Methodref          #2.#38         // java/util/Scanner.nextInt:()I
  #11 = Methodref          #6.#39         // java/io/PrintWriter.println:(I)V
  #12 = Methodref          #6.#40         // java/io/PrintWriter.flush:()V
  #13 = Class              #41            // Euclid
  #14 = Class              #42            // java/lang/Object
  #15 = Utf8               in
  #16 = Utf8               Ljava/util/Scanner;
  #17 = Utf8               out
  #18 = Utf8               Ljava/io/PrintWriter;
  #19 = Utf8               <init>
  #20 = Utf8               ()V
  #21 = Utf8               Code
  #22 = Utf8               LineNumberTable
  #23 = Utf8               main
  #24 = Utf8               ([Ljava/lang/String;)V
  #25 = Utf8               StackMapTable
  #26 = Utf8               SourceFile
  #27 = Utf8               Euclid.java
  #28 = NameAndType        #19:#20        // "<init>":()V
  #29 = Utf8               java/util/Scanner
  #30 = Class              #43            // java/lang/System
  #31 = NameAndType        #15:#44        // in:Ljava/io/InputStream;
  #32 = NameAndType        #19:#45        // "<init>":(Ljava/io/InputStream;)V
  #33 = NameAndType        #15:#16        // in:Ljava/util/Scanner;
  #34 = Utf8               java/io/PrintWriter
  #35 = NameAndType        #17:#46        // out:Ljava/io/PrintStream;
  #36 = NameAndType        #19:#47        // "<init>":(Ljava/io/OutputStream;)V
  #37 = NameAndType        #17:#18        // out:Ljava/io/PrintWriter;
  #38 = NameAndType        #48:#49        // nextInt:()I
  #39 = NameAndType        #50:#51        // println:(I)V
  #40 = NameAndType        #52:#20        // flush:()V
  #41 = Utf8               Euclid
  #42 = Utf8               java/lang/Object
  #43 = Utf8               java/lang/System
  #44 = Utf8               Ljava/io/InputStream;
  #45 = Utf8               (Ljava/io/InputStream;)V
  #46 = Utf8               Ljava/io/PrintStream;
  #47 = Utf8               (Ljava/io/OutputStream;)V
  #48 = Utf8               nextInt
  #49 = Utf8               ()I
  #50 = Utf8               println
  #51 = Utf8               (I)V
  #52 = Utf8               flush
{
  public Euclid();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 10: 0

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=5, args_size=1
         0: new           #2                  // class java/util/Scanner
         3: dup
         4: getstatic     #3                  // Field java/lang/System.in:Ljava/io/InputStream;
         7: invokespecial #4                  // Method java/util/Scanner."<init>":(Ljava/io/InputStream;)V
        10: putstatic     #5                  // Field in:Ljava/util/Scanner;
        13: new           #6                  // class java/io/PrintWriter
        16: dup
        17: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
        20: invokespecial #8                  // Method java/io/PrintWriter."<init>":(Ljava/io/OutputStream;)V
        23: putstatic     #9                  // Field out:Ljava/io/PrintWriter;
        26: getstatic     #5                  // Field in:Ljava/util/Scanner;
        29: invokevirtual #10                 // Method java/util/Scanner.nextInt:()I
        32: istore_1
        33: getstatic     #5                  // Field in:Ljava/util/Scanner;
        36: invokevirtual #10                 // Method java/util/Scanner.nextInt:()I
        39: istore_2
        40: iload_1
        41: iload_2
        42: if_icmpge     51
        45: iload_1
        46: istore_3
        47: iload_2
        48: istore_1
        49: iload_3
        50: istore_2
        51: iload_2
        52: istore_3
        53: iload_1
        54: iload_2
        55: irem
        56: ifeq          78
        59: iload_1
        60: iload_2
        61: idiv
        62: istore        4
        64: iload_1
        65: iload         4
        67: iload_2
        68: imul
        69: isub
        70: istore_3
        71: iload_2
        72: istore_1
        73: iload_3
        74: istore_2
        75: goto          53
        78: getstatic     #9                  // Field out:Ljava/io/PrintWriter;
        81: iload_3
        82: invokevirtual #11                 // Method java/io/PrintWriter.println:(I)V
        85: getstatic     #9                  // Field out:Ljava/io/PrintWriter;
        88: invokevirtual #12                 // Method java/io/PrintWriter.flush:()V
        91: return
      LineNumberTable:
        line 16: 0
        line 17: 13
        line 18: 26
        line 19: 33
        line 20: 40
        line 21: 45
        line 22: 47
        line 23: 49
        line 25: 51
        line 26: 53
        line 27: 59
        line 28: 64
        line 29: 71
        line 30: 73
        line 32: 78
        line 33: 85
        line 34: 91
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 51
          locals = [ int, int ]
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
        frame_type = 24 /* same */
}
SourceFile: "Euclid.java"
